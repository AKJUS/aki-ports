--- ddclient.in.orig	2024-12-23 14:05:36 UTC
+++ ddclient.in
@@ -20,6 +20,7 @@ use Sys::Hostname;
 use File::Temp;
 use Getopt::Long;
 use Sys::Hostname;
+use POSIX 'setsid';
 
 use version 0.77; our $VERSION = version->declare('3.11.2');
 my $version = $VERSION->stringify();
@@ -39,9 +40,9 @@ sub subst_var {
     return $subst;
 }
 
-my $etc = subst_var('@sysconfdir@', '/etc/ddclient');
-my $cachedir = subst_var('@localstatedir@', '/var') . '/cache/ddclient';
-my $savedir = '/tmp';
+my $etc = subst_var('@sysconfdir@', '/usr/local/etc');
+my $cachedir = subst_var('@localstatedir@', '/var') . '/tmp';
+my $savedir = '/var/tmp';
 if ($program =~ /test/i) {
     $etc = '.';
     $cachedir = '.';
@@ -59,7 +60,7 @@ local $lineno = '';
 local $file   = '';
 local $lineno = '';
 
-$ENV{'PATH'} = (exists($ENV{PATH}) ? "$ENV{PATH}:" : "") . "/sbin:/usr/sbin:/bin:/usr/bin:/etc:/usr/lib:";
+$ENV{'PATH'} = (exists($ENV{PATH}) ? "$ENV{PATH}:" : "") . "/sbin:/usr/local/sbin:/bin:";
 
 our %globals;
 my ($result, %config, %cache);
@@ -1131,6 +1132,9 @@ sub main {
         ;
     } elsif (opt('daemon')) {
         $SIG{'CHLD'} = 'IGNORE';
+        chdir '/';
+        open(STDIN,  "</dev/null");
+        open(STDOUT, ">/dev/null");
         my $pid = fork;
         if ($pid < 0) {
             print STDERR "${program}: can not fork ($!)\n";
@@ -1138,10 +1142,9 @@ sub main {
         } elsif ($pid) {
             exit 0;
         }
+        setsid;
         $SIG{'CHLD'} = 'DEFAULT';
-        open(STDOUT, ">/dev/null");
-        open(STDERR, ">/dev/null");
-        open(STDIN,  "</dev/null");
+        open(STDERR, "&STDOUT");
         write_pid();
     }
 
@@ -2166,17 +2169,17 @@ sub pipecmd {
     ## execute the command.
     local *FD;
     if (!open(FD, $cmd)) {
-        printf STDERR "%s: cannot execute command %s.\n", $program, $cmd;
+	warning("$program: cannot execute command %s.\n", $cmd);
 
     } elsif ($stdin && (!print FD "$stdin\n")) {
-        printf STDERR "%s: failed writting to %s.\n", $program, $cmd;
+	warning("$program: failed writing to %s.\n", $cmd);
         close(FD);
 
     } elsif (!close(FD)) {
-        printf STDERR "%s: failed closing %s.(%s)\n", $program, $cmd, $@;
+	warning("$program: failed closing %s.($@)\n", $cmd);
 
     } elsif (opt('exec') && $?) {
-        printf STDERR "%s: failed %s. (%s)\n", $program, $cmd, $@;
+	warning("$program: failed %s. ($@)\n", $cmd);
 
     } else {
         $ok = 1;
@@ -7107,7 +7110,7 @@ sub nic_porkbun_update {
             info("setting %s address to %s for %s", $ipv, $ip, $host);
             verbose("UPDATE:","updating %s", $host);
 
-            my $url = "https://porkbun.com/api/json/v3/dns/retrieveByNameType/$domain/$rrset_type/$sub_domain";
+            my $url = "https://api.porkbun.com/api/json/v3/dns/retrieveByNameType/$domain/$rrset_type/$sub_domain";
             my $data = encode_json({
                 secretapikey => $config{$host}{'secretapikey'},
                 apikey       => $config{$host}{'apikey'},
@@ -7123,7 +7126,7 @@ sub nic_porkbun_update {
             # No response, declare as failed
             if (!defined($reply) || !$reply) {
                 $config{$host}{"status-$ipv"} = "bad";
-                failed("updating %s: Could not connect to porkbun.com.", $host);
+                failed("updating %s: Could not connect to api.porkbun.com.", $host);
                 next;
             }
             if (!header_ok($host, $reply)) {
@@ -7161,7 +7164,7 @@ sub nic_porkbun_update {
                 my $notes = $records->[0]->{'notes'};
                 debug("ttl = %s", $ttl);
                 debug("notes = %s", $notes);
-                $url = "https://porkbun.com/api/json/v3/dns/editByNameType/$domain/$rrset_type/$sub_domain";
+                $url = "https://api.porkbun.com/api/json/v3/dns/editByNameType/$domain/$rrset_type/$sub_domain";
                 $data = encode_json({
                     secretapikey => $config{$host}{'secretapikey'},
                     apikey       => $config{$host}{'apikey'},
@@ -7178,7 +7181,7 @@ sub nic_porkbun_update {
                 );
                 # No response, declare as failed
                 if (!defined($reply) || !$reply) {
-                    failed("updating %s: Could not connect to porkbun.com.", $host);
+                    failed("updating %s: Could not connect to api.porkbun.com.", $host);
                     next;
                 }
                 if (!header_ok($host, $reply)) {
